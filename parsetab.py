
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "digit organic_symbol semi_bond semi_symbol\nline : atom \n    | atom chain_branch\n\nchain_branch : chains\n            | branch\n            | chains chain_branch\n            | branch chain_branch\n\nchains : chain\n       | chain chains\n\nchain : '.' atom\n      | bond atom\n      | bond rnum\n      | atom\n      | rnum\n\nbranch : '(' inner_branch ')'\n\ninner_branch : opt_bond_dot line\n            | opt_bond_dot line inner_branch\n\nopt_bond : bond\n        | empty\n\nopt_isotope : isotope\n            | empty\n\nopt_chiral : chiral\n           | empty\n\nopt_hcount : hcount\n           | empty\n\nopt_bond_dot : bond \n            | '.'\n            | empty\n\nopt_charge : charge\n           | empty\n\nopt_map : map\n        | empty\n\nopt_digit : digit\n          | empty\n\nbond : semi_bond\n     | '-'\n\nsymbol : semi_symbol\n        | 'H'\n\natom : organic_symbol\n    | bracket_atom\n\nbracket_atom : '[' opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ']'\n\nrnum : digit\n    | '%' digit digit\n\nisotope : opt_digit opt_digit digit\n\nhcount : 'H' opt_digit\n\ncharge : '+'\n       | '+' '+'\n       | '+' fifteen\n       | '-' \n       | '-' '-'\n       | '-' fifteen\n\nmap : ':' opt_digit opt_digit digit\n\nchiral : '@'\n       | '@' '@'\n\nfifteen : digit\n        | digit digit\nempty :"
    
_lr_action_items = {'organic_symbol':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,24,25,26,28,29,30,31,32,33,34,41,42,43,70,],[3,3,-38,-39,-12,-2,3,3,3,-56,3,3,-13,-34,-35,-41,-5,-6,-8,3,-25,-26,-27,-9,-10,-11,-14,-56,-42,-40,]),'[':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,24,25,26,28,29,30,31,32,33,34,41,42,43,70,],[5,5,-38,-39,-12,-2,5,5,5,-56,5,5,-13,-34,-35,-41,-5,-6,-8,5,-25,-26,-27,-9,-10,-11,-14,-56,-42,-40,]),'$end':([1,2,3,4,6,7,8,9,10,14,17,24,25,26,32,33,34,41,43,70,],[0,-1,-38,-39,-12,-2,-3,-4,-7,-13,-41,-5,-6,-8,-9,-10,-11,-14,-42,-40,]),'.':([2,3,4,6,7,8,9,10,11,14,17,24,25,26,32,33,34,41,42,43,70,],[12,-38,-39,-12,-2,12,12,12,30,-13,-41,-5,-6,-8,-9,-10,-11,-14,30,-42,-40,]),'semi_bond':([2,3,4,6,7,8,9,10,11,14,17,24,25,26,32,33,34,41,42,43,70,],[15,-38,-39,-12,-2,15,15,15,15,-13,-41,-5,-6,-8,-9,-10,-11,-14,15,-42,-40,]),'-':([2,3,4,6,7,8,9,10,11,14,17,23,24,25,26,32,33,34,36,37,38,40,41,42,43,44,45,46,47,50,51,52,53,54,59,60,70,],[16,-38,-39,-12,-2,16,16,16,16,-13,-41,-32,-5,-6,-8,-9,-10,-11,-56,-36,-37,-33,-14,16,-42,-56,-21,-22,-52,59,-23,-24,-56,-53,68,-44,-40,]),')':([2,3,4,6,7,8,9,10,14,17,24,25,26,27,32,33,34,41,42,43,49,70,],[-1,-38,-39,-12,-2,-3,-4,-7,-13,-41,-5,-6,-8,41,-9,-10,-11,-14,-15,-42,-16,-40,]),'(':([2,3,4,6,8,9,10,14,17,26,32,33,34,41,43,70,],[11,-38,-39,-12,11,11,-7,-13,-41,-8,-9,-10,-11,-14,-42,-40,]),'digit':([2,3,4,5,6,8,9,10,13,14,15,16,17,18,21,22,23,26,32,33,34,35,39,40,41,43,53,58,59,64,67,70,71,73,],[17,-38,-39,23,-12,17,17,17,17,-13,-34,-35,-41,35,-33,23,-32,-8,-9,-10,-11,43,48,-33,-14,-42,23,67,67,23,72,-40,23,74,]),'%':([2,3,4,6,8,9,10,13,14,15,16,17,26,32,33,34,41,43,70,],[18,-38,-39,-12,18,18,18,18,-13,-34,-35,-41,-8,-9,-10,-11,-14,-42,-40,]),'semi_symbol':([5,19,20,21,48,],[-56,37,-19,-20,-43,]),'H':([5,19,20,21,36,37,38,44,45,46,47,48,54,],[-56,38,-19,-20,-56,-36,-37,53,-21,-22,-52,-43,-53,]),'+':([23,36,37,38,40,44,45,46,47,50,51,52,53,54,58,60,],[-32,-56,-36,-37,-33,-56,-21,-22,-52,58,-23,-24,-56,-53,65,-44,]),':':([23,36,37,38,40,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,65,66,67,68,69,72,],[-32,-56,-36,-37,-33,-56,-21,-22,-52,-56,-23,-24,-56,-53,64,-28,-29,-45,-48,-44,-46,-47,-54,-49,-50,-55,]),']':([23,36,37,38,40,44,45,46,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,72,74,],[-32,-56,-36,-37,-33,-56,-21,-22,-52,-56,-23,-24,-56,-53,-56,-28,-29,-45,-48,-44,70,-30,-31,-46,-47,-54,-49,-50,-55,-51,]),'@':([36,37,38,47,],[47,-36,-37,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'line':([0,28,],[1,42,]),'atom':([0,2,8,9,10,12,13,28,],[2,6,6,6,6,32,33,2,]),'bracket_atom':([0,2,8,9,10,12,13,28,],[4,4,4,4,4,4,4,4,]),'chain_branch':([2,8,9,],[7,24,25,]),'chains':([2,8,9,10,],[8,8,8,26,]),'branch':([2,8,9,],[9,9,9,]),'chain':([2,8,9,10,],[10,10,10,10,]),'bond':([2,8,9,10,11,42,],[13,13,13,13,29,29,]),'rnum':([2,8,9,10,13,],[14,14,14,14,34,]),'opt_isotope':([5,],[19,]),'isotope':([5,],[20,]),'empty':([5,11,22,36,42,44,50,53,55,64,71,],[21,31,40,46,31,52,57,40,63,40,40,]),'opt_digit':([5,22,53,64,71,],[22,39,60,71,73,]),'inner_branch':([11,42,],[27,49,]),'opt_bond_dot':([11,42,],[28,28,]),'symbol':([19,],[36,]),'opt_chiral':([36,],[44,]),'chiral':([36,],[45,]),'opt_hcount':([44,],[50,]),'hcount':([44,],[51,]),'opt_charge':([50,],[55,]),'charge':([50,],[56,]),'opt_map':([55,],[61,]),'map':([55,],[62,]),'fifteen':([58,59,],[66,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> line","S'",1,None,None,None),
  ('line -> atom','line',1,'p_line','smilesGrammar.py',45),
  ('line -> atom chain_branch','line',2,'p_line','smilesGrammar.py',46),
  ('chain_branch -> chains','chain_branch',1,'p_chain_branch','smilesGrammar.py',52),
  ('chain_branch -> branch','chain_branch',1,'p_chain_branch','smilesGrammar.py',53),
  ('chain_branch -> chains chain_branch','chain_branch',2,'p_chain_branch','smilesGrammar.py',54),
  ('chain_branch -> branch chain_branch','chain_branch',2,'p_chain_branch','smilesGrammar.py',55),
  ('chains -> chain','chains',1,'p_chains','smilesGrammar.py',61),
  ('chains -> chain chains','chains',2,'p_chains','smilesGrammar.py',62),
  ('chain -> . atom','chain',2,'p_chain','smilesGrammar.py',68),
  ('chain -> bond atom','chain',2,'p_chain','smilesGrammar.py',69),
  ('chain -> bond rnum','chain',2,'p_chain','smilesGrammar.py',70),
  ('chain -> atom','chain',1,'p_chain','smilesGrammar.py',71),
  ('chain -> rnum','chain',1,'p_chain','smilesGrammar.py',72),
  ('branch -> ( inner_branch )','branch',3,'p_branch','smilesGrammar.py',78),
  ('inner_branch -> opt_bond_dot line','inner_branch',2,'p_inner_branch','smilesGrammar.py',84),
  ('inner_branch -> opt_bond_dot line inner_branch','inner_branch',3,'p_inner_branch','smilesGrammar.py',85),
  ('opt_bond -> bond','opt_bond',1,'p_opt_bond','smilesGrammar.py',91),
  ('opt_bond -> empty','opt_bond',1,'p_opt_bond','smilesGrammar.py',92),
  ('opt_isotope -> isotope','opt_isotope',1,'p_opt_isotope','smilesGrammar.py',98),
  ('opt_isotope -> empty','opt_isotope',1,'p_opt_isotope','smilesGrammar.py',99),
  ('opt_chiral -> chiral','opt_chiral',1,'p_opt_chiral','smilesGrammar.py',105),
  ('opt_chiral -> empty','opt_chiral',1,'p_opt_chiral','smilesGrammar.py',106),
  ('opt_hcount -> hcount','opt_hcount',1,'p_opt_hcount','smilesGrammar.py',112),
  ('opt_hcount -> empty','opt_hcount',1,'p_opt_hcount','smilesGrammar.py',113),
  ('opt_bond_dot -> bond','opt_bond_dot',1,'p_opt_bond_dot','smilesGrammar.py',119),
  ('opt_bond_dot -> .','opt_bond_dot',1,'p_opt_bond_dot','smilesGrammar.py',120),
  ('opt_bond_dot -> empty','opt_bond_dot',1,'p_opt_bond_dot','smilesGrammar.py',121),
  ('opt_charge -> charge','opt_charge',1,'p_opt_charge','smilesGrammar.py',127),
  ('opt_charge -> empty','opt_charge',1,'p_opt_charge','smilesGrammar.py',128),
  ('opt_map -> map','opt_map',1,'p_opt_map','smilesGrammar.py',133),
  ('opt_map -> empty','opt_map',1,'p_opt_map','smilesGrammar.py',134),
  ('opt_digit -> digit','opt_digit',1,'p_opt_digit','smilesGrammar.py',139),
  ('opt_digit -> empty','opt_digit',1,'p_opt_digit','smilesGrammar.py',140),
  ('bond -> semi_bond','bond',1,'p_bond','smilesGrammar.py',145),
  ('bond -> -','bond',1,'p_bond','smilesGrammar.py',146),
  ('symbol -> semi_symbol','symbol',1,'p_semi_symbols','smilesGrammar.py',152),
  ('symbol -> H','symbol',1,'p_semi_symbols','smilesGrammar.py',153),
  ('atom -> organic_symbol','atom',1,'p_atom','smilesGrammar.py',160),
  ('atom -> bracket_atom','atom',1,'p_atom','smilesGrammar.py',161),
  ('bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]','bracket_atom',8,'p_bracket_atom','smilesGrammar.py',168),
  ('rnum -> digit','rnum',1,'p_rnum','smilesGrammar.py',175),
  ('rnum -> % digit digit','rnum',3,'p_rnum','smilesGrammar.py',176),
  ('isotope -> opt_digit opt_digit digit','isotope',3,'p_isotope','smilesGrammar.py',182),
  ('hcount -> H opt_digit','hcount',2,'p_hcount','smilesGrammar.py',188),
  ('charge -> +','charge',1,'p_charge','smilesGrammar.py',194),
  ('charge -> + +','charge',2,'p_charge','smilesGrammar.py',195),
  ('charge -> + fifteen','charge',2,'p_charge','smilesGrammar.py',196),
  ('charge -> -','charge',1,'p_charge','smilesGrammar.py',197),
  ('charge -> - -','charge',2,'p_charge','smilesGrammar.py',198),
  ('charge -> - fifteen','charge',2,'p_charge','smilesGrammar.py',199),
  ('map -> : opt_digit opt_digit digit','map',4,'p_map','smilesGrammar.py',205),
  ('chiral -> @','chiral',1,'p_chiral','smilesGrammar.py',211),
  ('chiral -> @ @','chiral',2,'p_chiral','smilesGrammar.py',212),
  ('fifteen -> digit','fifteen',1,'p_fifteen','smilesGrammar.py',218),
  ('fifteen -> digit digit','fifteen',2,'p_fifteen','smilesGrammar.py',219),
  ('empty -> <empty>','empty',0,'p_empty','smilesGrammar.py',224),
]
