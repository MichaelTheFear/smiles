Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> line
Rule 1     line -> atom
Rule 2     line -> atom chain_branch
Rule 3     chain_branch -> chains
Rule 4     chain_branch -> branch
Rule 5     chain_branch -> chains chain_branch
Rule 6     chain_branch -> branch chain_branch
Rule 7     chains -> chain
Rule 8     chains -> chain chains
Rule 9     chain -> . atom
Rule 10    chain -> bond atom
Rule 11    chain -> bond rnum
Rule 12    chain -> atom
Rule 13    chain -> rnum
Rule 14    branch -> ( inner_branch )
Rule 15    inner_branch -> opt_bond_dot line
Rule 16    inner_branch -> opt_bond_dot line inner_branch
Rule 17    opt_bond -> bond
Rule 18    opt_bond -> empty
Rule 19    opt_isotope -> isotope
Rule 20    opt_isotope -> empty
Rule 21    opt_chiral -> chiral
Rule 22    opt_chiral -> empty
Rule 23    opt_hcount -> hcount
Rule 24    opt_hcount -> empty
Rule 25    opt_bond_dot -> bond
Rule 26    opt_bond_dot -> .
Rule 27    opt_bond_dot -> empty
Rule 28    opt_charge -> charge
Rule 29    opt_charge -> empty
Rule 30    opt_map -> map
Rule 31    opt_map -> empty
Rule 32    opt_digit -> digit
Rule 33    opt_digit -> empty
Rule 34    bond -> semi_bond
Rule 35    bond -> -
Rule 36    symbol -> semi_symbol
Rule 37    symbol -> H
Rule 38    atom -> organic_symbol
Rule 39    atom -> bracket_atom
Rule 40    bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]
Rule 41    rnum -> digit
Rule 42    rnum -> % digit digit
Rule 43    isotope -> opt_digit opt_digit digit
Rule 44    hcount -> H opt_digit
Rule 45    charge -> +
Rule 46    charge -> + +
Rule 47    charge -> + fifteen
Rule 48    charge -> -
Rule 49    charge -> - -
Rule 50    charge -> - fifteen
Rule 51    map -> : opt_digit opt_digit digit
Rule 52    chiral -> @
Rule 53    chiral -> @ @
Rule 54    fifteen -> digit
Rule 55    fifteen -> digit digit
Rule 56    empty -> <empty>

Terminals, with rules where they appear

%                    : 42
(                    : 14
)                    : 14
+                    : 45 46 46 47
-                    : 35 48 49 49 50
.                    : 9 26
:                    : 51
@                    : 52 53 53
H                    : 37 44
[                    : 40
]                    : 40
digit                : 32 41 42 42 43 51 54 55 55
error                : 
organic_symbol       : 38
semi_bond            : 34
semi_symbol          : 36

Nonterminals, with rules where they appear

atom                 : 1 2 9 10 12
bond                 : 10 11 17 25
bracket_atom         : 39
branch               : 4 6
chain                : 7 8
chain_branch         : 2 5 6
chains               : 3 5 8
charge               : 28
chiral               : 21
empty                : 18 20 22 24 27 29 31 33
fifteen              : 47 50
hcount               : 23
inner_branch         : 14 16
isotope              : 19
line                 : 15 16 0
map                  : 30
opt_bond             : 
opt_bond_dot         : 15 16
opt_charge           : 40
opt_chiral           : 40
opt_digit            : 43 43 44 51 51
opt_hcount           : 40
opt_isotope          : 40
opt_map              : 40
rnum                 : 11 13
symbol               : 40

Parsing method: LALR

state 0

    (0) S' -> . line
    (1) line -> . atom
    (2) line -> . atom chain_branch
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

    organic_symbol  shift and go to state 3
    [               shift and go to state 5

    line                           shift and go to state 1
    atom                           shift and go to state 2
    bracket_atom                   shift and go to state 4

state 1

    (0) S' -> line .



state 2

    (1) line -> atom .
    (2) line -> atom . chain_branch
    (3) chain_branch -> . chains
    (4) chain_branch -> . branch
    (5) chain_branch -> . chains chain_branch
    (6) chain_branch -> . branch chain_branch
    (7) chains -> . chain
    (8) chains -> . chain chains
    (14) branch -> . ( inner_branch )
    (9) chain -> . . atom
    (10) chain -> . bond atom
    (11) chain -> . bond rnum
    (12) chain -> . atom
    (13) chain -> . rnum
    (34) bond -> . semi_bond
    (35) bond -> . -
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (41) rnum -> . digit
    (42) rnum -> . % digit digit
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for semi_bond resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for organic_symbol resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 1 (line -> atom .)
    )               reduce using rule 1 (line -> atom .)
    (               shift and go to state 11
    .               shift and go to state 12
    semi_bond       shift and go to state 15
    -               shift and go to state 16
    organic_symbol  shift and go to state 3
    digit           shift and go to state 17
    %               shift and go to state 18
    [               shift and go to state 5

  ! .               [ reduce using rule 1 (line -> atom .) ]
  ! semi_bond       [ reduce using rule 1 (line -> atom .) ]
  ! -               [ reduce using rule 1 (line -> atom .) ]
  ! organic_symbol  [ reduce using rule 1 (line -> atom .) ]
  ! [               [ reduce using rule 1 (line -> atom .) ]

    atom                           shift and go to state 6
    chain_branch                   shift and go to state 7
    chains                         shift and go to state 8
    branch                         shift and go to state 9
    chain                          shift and go to state 10
    bond                           shift and go to state 13
    rnum                           shift and go to state 14
    bracket_atom                   shift and go to state 4

state 3

    (38) atom -> organic_symbol .

    (               reduce using rule 38 (atom -> organic_symbol .)
    .               reduce using rule 38 (atom -> organic_symbol .)
    semi_bond       reduce using rule 38 (atom -> organic_symbol .)
    -               reduce using rule 38 (atom -> organic_symbol .)
    organic_symbol  reduce using rule 38 (atom -> organic_symbol .)
    digit           reduce using rule 38 (atom -> organic_symbol .)
    %               reduce using rule 38 (atom -> organic_symbol .)
    [               reduce using rule 38 (atom -> organic_symbol .)
    $end            reduce using rule 38 (atom -> organic_symbol .)
    )               reduce using rule 38 (atom -> organic_symbol .)


state 4

    (39) atom -> bracket_atom .

    (               reduce using rule 39 (atom -> bracket_atom .)
    .               reduce using rule 39 (atom -> bracket_atom .)
    semi_bond       reduce using rule 39 (atom -> bracket_atom .)
    -               reduce using rule 39 (atom -> bracket_atom .)
    organic_symbol  reduce using rule 39 (atom -> bracket_atom .)
    digit           reduce using rule 39 (atom -> bracket_atom .)
    %               reduce using rule 39 (atom -> bracket_atom .)
    [               reduce using rule 39 (atom -> bracket_atom .)
    $end            reduce using rule 39 (atom -> bracket_atom .)
    )               reduce using rule 39 (atom -> bracket_atom .)


state 5

    (40) bracket_atom -> [ . opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]
    (19) opt_isotope -> . isotope
    (20) opt_isotope -> . empty
    (43) isotope -> . opt_digit opt_digit digit
    (56) empty -> .
    (32) opt_digit -> . digit
    (33) opt_digit -> . empty

  ! shift/reduce conflict for digit resolved as shift
    semi_symbol     reduce using rule 56 (empty -> .)
    H               reduce using rule 56 (empty -> .)
    digit           shift and go to state 23

  ! digit           [ reduce using rule 56 (empty -> .) ]

    opt_isotope                    shift and go to state 19
    isotope                        shift and go to state 20
    empty                          shift and go to state 21
    opt_digit                      shift and go to state 22

state 6

    (12) chain -> atom .

    .               reduce using rule 12 (chain -> atom .)
    semi_bond       reduce using rule 12 (chain -> atom .)
    -               reduce using rule 12 (chain -> atom .)
    organic_symbol  reduce using rule 12 (chain -> atom .)
    digit           reduce using rule 12 (chain -> atom .)
    %               reduce using rule 12 (chain -> atom .)
    [               reduce using rule 12 (chain -> atom .)
    (               reduce using rule 12 (chain -> atom .)
    $end            reduce using rule 12 (chain -> atom .)
    )               reduce using rule 12 (chain -> atom .)


state 7

    (2) line -> atom chain_branch .

    $end            reduce using rule 2 (line -> atom chain_branch .)
    .               reduce using rule 2 (line -> atom chain_branch .)
    semi_bond       reduce using rule 2 (line -> atom chain_branch .)
    -               reduce using rule 2 (line -> atom chain_branch .)
    organic_symbol  reduce using rule 2 (line -> atom chain_branch .)
    [               reduce using rule 2 (line -> atom chain_branch .)
    )               reduce using rule 2 (line -> atom chain_branch .)


state 8

    (3) chain_branch -> chains .
    (5) chain_branch -> chains . chain_branch
    (3) chain_branch -> . chains
    (4) chain_branch -> . branch
    (5) chain_branch -> . chains chain_branch
    (6) chain_branch -> . branch chain_branch
    (7) chains -> . chain
    (8) chains -> . chain chains
    (14) branch -> . ( inner_branch )
    (9) chain -> . . atom
    (10) chain -> . bond atom
    (11) chain -> . bond rnum
    (12) chain -> . atom
    (13) chain -> . rnum
    (34) bond -> . semi_bond
    (35) bond -> . -
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (41) rnum -> . digit
    (42) rnum -> . % digit digit
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for semi_bond resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for organic_symbol resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 3 (chain_branch -> chains .)
    )               reduce using rule 3 (chain_branch -> chains .)
    (               shift and go to state 11
    .               shift and go to state 12
    semi_bond       shift and go to state 15
    -               shift and go to state 16
    organic_symbol  shift and go to state 3
    digit           shift and go to state 17
    %               shift and go to state 18
    [               shift and go to state 5

  ! .               [ reduce using rule 3 (chain_branch -> chains .) ]
  ! semi_bond       [ reduce using rule 3 (chain_branch -> chains .) ]
  ! -               [ reduce using rule 3 (chain_branch -> chains .) ]
  ! organic_symbol  [ reduce using rule 3 (chain_branch -> chains .) ]
  ! [               [ reduce using rule 3 (chain_branch -> chains .) ]

    chains                         shift and go to state 8
    chain_branch                   shift and go to state 24
    branch                         shift and go to state 9
    chain                          shift and go to state 10
    atom                           shift and go to state 6
    bond                           shift and go to state 13
    rnum                           shift and go to state 14
    bracket_atom                   shift and go to state 4

state 9

    (4) chain_branch -> branch .
    (6) chain_branch -> branch . chain_branch
    (3) chain_branch -> . chains
    (4) chain_branch -> . branch
    (5) chain_branch -> . chains chain_branch
    (6) chain_branch -> . branch chain_branch
    (7) chains -> . chain
    (8) chains -> . chain chains
    (14) branch -> . ( inner_branch )
    (9) chain -> . . atom
    (10) chain -> . bond atom
    (11) chain -> . bond rnum
    (12) chain -> . atom
    (13) chain -> . rnum
    (34) bond -> . semi_bond
    (35) bond -> . -
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (41) rnum -> . digit
    (42) rnum -> . % digit digit
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for semi_bond resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for organic_symbol resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    $end            reduce using rule 4 (chain_branch -> branch .)
    )               reduce using rule 4 (chain_branch -> branch .)
    (               shift and go to state 11
    .               shift and go to state 12
    semi_bond       shift and go to state 15
    -               shift and go to state 16
    organic_symbol  shift and go to state 3
    digit           shift and go to state 17
    %               shift and go to state 18
    [               shift and go to state 5

  ! .               [ reduce using rule 4 (chain_branch -> branch .) ]
  ! semi_bond       [ reduce using rule 4 (chain_branch -> branch .) ]
  ! -               [ reduce using rule 4 (chain_branch -> branch .) ]
  ! organic_symbol  [ reduce using rule 4 (chain_branch -> branch .) ]
  ! [               [ reduce using rule 4 (chain_branch -> branch .) ]

    branch                         shift and go to state 9
    chain_branch                   shift and go to state 25
    chains                         shift and go to state 8
    chain                          shift and go to state 10
    atom                           shift and go to state 6
    bond                           shift and go to state 13
    rnum                           shift and go to state 14
    bracket_atom                   shift and go to state 4

state 10

    (7) chains -> chain .
    (8) chains -> chain . chains
    (7) chains -> . chain
    (8) chains -> . chain chains
    (9) chain -> . . atom
    (10) chain -> . bond atom
    (11) chain -> . bond rnum
    (12) chain -> . atom
    (13) chain -> . rnum
    (34) bond -> . semi_bond
    (35) bond -> . -
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (41) rnum -> . digit
    (42) rnum -> . % digit digit
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for semi_bond resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for organic_symbol resolved as shift
  ! shift/reduce conflict for digit resolved as shift
  ! shift/reduce conflict for % resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    (               reduce using rule 7 (chains -> chain .)
    $end            reduce using rule 7 (chains -> chain .)
    )               reduce using rule 7 (chains -> chain .)
    .               shift and go to state 12
    semi_bond       shift and go to state 15
    -               shift and go to state 16
    organic_symbol  shift and go to state 3
    digit           shift and go to state 17
    %               shift and go to state 18
    [               shift and go to state 5

  ! .               [ reduce using rule 7 (chains -> chain .) ]
  ! semi_bond       [ reduce using rule 7 (chains -> chain .) ]
  ! -               [ reduce using rule 7 (chains -> chain .) ]
  ! organic_symbol  [ reduce using rule 7 (chains -> chain .) ]
  ! digit           [ reduce using rule 7 (chains -> chain .) ]
  ! %               [ reduce using rule 7 (chains -> chain .) ]
  ! [               [ reduce using rule 7 (chains -> chain .) ]

    chain                          shift and go to state 10
    chains                         shift and go to state 26
    atom                           shift and go to state 6
    bond                           shift and go to state 13
    rnum                           shift and go to state 14
    bracket_atom                   shift and go to state 4

state 11

    (14) branch -> ( . inner_branch )
    (15) inner_branch -> . opt_bond_dot line
    (16) inner_branch -> . opt_bond_dot line inner_branch
    (25) opt_bond_dot -> . bond
    (26) opt_bond_dot -> . .
    (27) opt_bond_dot -> . empty
    (34) bond -> . semi_bond
    (35) bond -> . -
    (56) empty -> .

    .               shift and go to state 30
    semi_bond       shift and go to state 15
    -               shift and go to state 16
    organic_symbol  reduce using rule 56 (empty -> .)
    [               reduce using rule 56 (empty -> .)

    inner_branch                   shift and go to state 27
    opt_bond_dot                   shift and go to state 28
    bond                           shift and go to state 29
    empty                          shift and go to state 31

state 12

    (9) chain -> . . atom
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

    organic_symbol  shift and go to state 3
    [               shift and go to state 5

    atom                           shift and go to state 32
    bracket_atom                   shift and go to state 4

state 13

    (10) chain -> bond . atom
    (11) chain -> bond . rnum
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (41) rnum -> . digit
    (42) rnum -> . % digit digit
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

    organic_symbol  shift and go to state 3
    digit           shift and go to state 17
    %               shift and go to state 18
    [               shift and go to state 5

    atom                           shift and go to state 33
    rnum                           shift and go to state 34
    bracket_atom                   shift and go to state 4

state 14

    (13) chain -> rnum .

    .               reduce using rule 13 (chain -> rnum .)
    semi_bond       reduce using rule 13 (chain -> rnum .)
    -               reduce using rule 13 (chain -> rnum .)
    organic_symbol  reduce using rule 13 (chain -> rnum .)
    digit           reduce using rule 13 (chain -> rnum .)
    %               reduce using rule 13 (chain -> rnum .)
    [               reduce using rule 13 (chain -> rnum .)
    (               reduce using rule 13 (chain -> rnum .)
    $end            reduce using rule 13 (chain -> rnum .)
    )               reduce using rule 13 (chain -> rnum .)


state 15

    (34) bond -> semi_bond .

    organic_symbol  reduce using rule 34 (bond -> semi_bond .)
    digit           reduce using rule 34 (bond -> semi_bond .)
    %               reduce using rule 34 (bond -> semi_bond .)
    [               reduce using rule 34 (bond -> semi_bond .)


state 16

    (35) bond -> - .

    organic_symbol  reduce using rule 35 (bond -> - .)
    digit           reduce using rule 35 (bond -> - .)
    %               reduce using rule 35 (bond -> - .)
    [               reduce using rule 35 (bond -> - .)


state 17

    (41) rnum -> digit .

    .               reduce using rule 41 (rnum -> digit .)
    semi_bond       reduce using rule 41 (rnum -> digit .)
    -               reduce using rule 41 (rnum -> digit .)
    organic_symbol  reduce using rule 41 (rnum -> digit .)
    digit           reduce using rule 41 (rnum -> digit .)
    %               reduce using rule 41 (rnum -> digit .)
    [               reduce using rule 41 (rnum -> digit .)
    (               reduce using rule 41 (rnum -> digit .)
    $end            reduce using rule 41 (rnum -> digit .)
    )               reduce using rule 41 (rnum -> digit .)


state 18

    (42) rnum -> % . digit digit

    digit           shift and go to state 35


state 19

    (40) bracket_atom -> [ opt_isotope . symbol opt_chiral opt_hcount opt_charge opt_map ]
    (36) symbol -> . semi_symbol
    (37) symbol -> . H

    semi_symbol     shift and go to state 37
    H               shift and go to state 38

    symbol                         shift and go to state 36

state 20

    (19) opt_isotope -> isotope .

    semi_symbol     reduce using rule 19 (opt_isotope -> isotope .)
    H               reduce using rule 19 (opt_isotope -> isotope .)


state 21

    (20) opt_isotope -> empty .
    (33) opt_digit -> empty .

    semi_symbol     reduce using rule 20 (opt_isotope -> empty .)
    H               reduce using rule 20 (opt_isotope -> empty .)
    digit           reduce using rule 33 (opt_digit -> empty .)


state 22

    (43) isotope -> opt_digit . opt_digit digit
    (32) opt_digit -> . digit
    (33) opt_digit -> . empty
    (56) empty -> .

  ! shift/reduce conflict for digit resolved as shift
    digit           shift and go to state 23

  ! digit           [ reduce using rule 56 (empty -> .) ]

    opt_digit                      shift and go to state 39
    empty                          shift and go to state 40

state 23

    (32) opt_digit -> digit .

    digit           reduce using rule 32 (opt_digit -> digit .)
    +               reduce using rule 32 (opt_digit -> digit .)
    -               reduce using rule 32 (opt_digit -> digit .)
    :               reduce using rule 32 (opt_digit -> digit .)
    ]               reduce using rule 32 (opt_digit -> digit .)


state 24

    (5) chain_branch -> chains chain_branch .

    $end            reduce using rule 5 (chain_branch -> chains chain_branch .)
    .               reduce using rule 5 (chain_branch -> chains chain_branch .)
    semi_bond       reduce using rule 5 (chain_branch -> chains chain_branch .)
    -               reduce using rule 5 (chain_branch -> chains chain_branch .)
    organic_symbol  reduce using rule 5 (chain_branch -> chains chain_branch .)
    [               reduce using rule 5 (chain_branch -> chains chain_branch .)
    )               reduce using rule 5 (chain_branch -> chains chain_branch .)


state 25

    (6) chain_branch -> branch chain_branch .

    $end            reduce using rule 6 (chain_branch -> branch chain_branch .)
    .               reduce using rule 6 (chain_branch -> branch chain_branch .)
    semi_bond       reduce using rule 6 (chain_branch -> branch chain_branch .)
    -               reduce using rule 6 (chain_branch -> branch chain_branch .)
    organic_symbol  reduce using rule 6 (chain_branch -> branch chain_branch .)
    [               reduce using rule 6 (chain_branch -> branch chain_branch .)
    )               reduce using rule 6 (chain_branch -> branch chain_branch .)


state 26

    (8) chains -> chain chains .

    (               reduce using rule 8 (chains -> chain chains .)
    .               reduce using rule 8 (chains -> chain chains .)
    semi_bond       reduce using rule 8 (chains -> chain chains .)
    -               reduce using rule 8 (chains -> chain chains .)
    organic_symbol  reduce using rule 8 (chains -> chain chains .)
    digit           reduce using rule 8 (chains -> chain chains .)
    %               reduce using rule 8 (chains -> chain chains .)
    [               reduce using rule 8 (chains -> chain chains .)
    $end            reduce using rule 8 (chains -> chain chains .)
    )               reduce using rule 8 (chains -> chain chains .)


state 27

    (14) branch -> ( inner_branch . )

    )               shift and go to state 41


state 28

    (15) inner_branch -> opt_bond_dot . line
    (16) inner_branch -> opt_bond_dot . line inner_branch
    (1) line -> . atom
    (2) line -> . atom chain_branch
    (38) atom -> . organic_symbol
    (39) atom -> . bracket_atom
    (40) bracket_atom -> . [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ]

    organic_symbol  shift and go to state 3
    [               shift and go to state 5

    line                           shift and go to state 42
    atom                           shift and go to state 2
    bracket_atom                   shift and go to state 4

state 29

    (25) opt_bond_dot -> bond .

    organic_symbol  reduce using rule 25 (opt_bond_dot -> bond .)
    [               reduce using rule 25 (opt_bond_dot -> bond .)


state 30

    (26) opt_bond_dot -> . .

    organic_symbol  reduce using rule 26 (opt_bond_dot -> . .)
    [               reduce using rule 26 (opt_bond_dot -> . .)


state 31

    (27) opt_bond_dot -> empty .

    organic_symbol  reduce using rule 27 (opt_bond_dot -> empty .)
    [               reduce using rule 27 (opt_bond_dot -> empty .)


state 32

    (9) chain -> . atom .

    .               reduce using rule 9 (chain -> . atom .)
    semi_bond       reduce using rule 9 (chain -> . atom .)
    -               reduce using rule 9 (chain -> . atom .)
    organic_symbol  reduce using rule 9 (chain -> . atom .)
    digit           reduce using rule 9 (chain -> . atom .)
    %               reduce using rule 9 (chain -> . atom .)
    [               reduce using rule 9 (chain -> . atom .)
    (               reduce using rule 9 (chain -> . atom .)
    $end            reduce using rule 9 (chain -> . atom .)
    )               reduce using rule 9 (chain -> . atom .)


state 33

    (10) chain -> bond atom .

    .               reduce using rule 10 (chain -> bond atom .)
    semi_bond       reduce using rule 10 (chain -> bond atom .)
    -               reduce using rule 10 (chain -> bond atom .)
    organic_symbol  reduce using rule 10 (chain -> bond atom .)
    digit           reduce using rule 10 (chain -> bond atom .)
    %               reduce using rule 10 (chain -> bond atom .)
    [               reduce using rule 10 (chain -> bond atom .)
    (               reduce using rule 10 (chain -> bond atom .)
    $end            reduce using rule 10 (chain -> bond atom .)
    )               reduce using rule 10 (chain -> bond atom .)


state 34

    (11) chain -> bond rnum .

    .               reduce using rule 11 (chain -> bond rnum .)
    semi_bond       reduce using rule 11 (chain -> bond rnum .)
    -               reduce using rule 11 (chain -> bond rnum .)
    organic_symbol  reduce using rule 11 (chain -> bond rnum .)
    digit           reduce using rule 11 (chain -> bond rnum .)
    %               reduce using rule 11 (chain -> bond rnum .)
    [               reduce using rule 11 (chain -> bond rnum .)
    (               reduce using rule 11 (chain -> bond rnum .)
    $end            reduce using rule 11 (chain -> bond rnum .)
    )               reduce using rule 11 (chain -> bond rnum .)


state 35

    (42) rnum -> % digit . digit

    digit           shift and go to state 43


state 36

    (40) bracket_atom -> [ opt_isotope symbol . opt_chiral opt_hcount opt_charge opt_map ]
    (21) opt_chiral -> . chiral
    (22) opt_chiral -> . empty
    (52) chiral -> . @
    (53) chiral -> . @ @
    (56) empty -> .

    @               shift and go to state 47
    H               reduce using rule 56 (empty -> .)
    +               reduce using rule 56 (empty -> .)
    -               reduce using rule 56 (empty -> .)
    :               reduce using rule 56 (empty -> .)
    ]               reduce using rule 56 (empty -> .)

    opt_chiral                     shift and go to state 44
    chiral                         shift and go to state 45
    empty                          shift and go to state 46

state 37

    (36) symbol -> semi_symbol .

    @               reduce using rule 36 (symbol -> semi_symbol .)
    H               reduce using rule 36 (symbol -> semi_symbol .)
    +               reduce using rule 36 (symbol -> semi_symbol .)
    -               reduce using rule 36 (symbol -> semi_symbol .)
    :               reduce using rule 36 (symbol -> semi_symbol .)
    ]               reduce using rule 36 (symbol -> semi_symbol .)


state 38

    (37) symbol -> H .

    @               reduce using rule 37 (symbol -> H .)
    H               reduce using rule 37 (symbol -> H .)
    +               reduce using rule 37 (symbol -> H .)
    -               reduce using rule 37 (symbol -> H .)
    :               reduce using rule 37 (symbol -> H .)
    ]               reduce using rule 37 (symbol -> H .)


state 39

    (43) isotope -> opt_digit opt_digit . digit

    digit           shift and go to state 48


state 40

    (33) opt_digit -> empty .

    digit           reduce using rule 33 (opt_digit -> empty .)
    +               reduce using rule 33 (opt_digit -> empty .)
    -               reduce using rule 33 (opt_digit -> empty .)
    :               reduce using rule 33 (opt_digit -> empty .)
    ]               reduce using rule 33 (opt_digit -> empty .)


state 41

    (14) branch -> ( inner_branch ) .

    (               reduce using rule 14 (branch -> ( inner_branch ) .)
    .               reduce using rule 14 (branch -> ( inner_branch ) .)
    semi_bond       reduce using rule 14 (branch -> ( inner_branch ) .)
    -               reduce using rule 14 (branch -> ( inner_branch ) .)
    organic_symbol  reduce using rule 14 (branch -> ( inner_branch ) .)
    digit           reduce using rule 14 (branch -> ( inner_branch ) .)
    %               reduce using rule 14 (branch -> ( inner_branch ) .)
    [               reduce using rule 14 (branch -> ( inner_branch ) .)
    $end            reduce using rule 14 (branch -> ( inner_branch ) .)
    )               reduce using rule 14 (branch -> ( inner_branch ) .)


state 42

    (15) inner_branch -> opt_bond_dot line .
    (16) inner_branch -> opt_bond_dot line . inner_branch
    (15) inner_branch -> . opt_bond_dot line
    (16) inner_branch -> . opt_bond_dot line inner_branch
    (25) opt_bond_dot -> . bond
    (26) opt_bond_dot -> . .
    (27) opt_bond_dot -> . empty
    (34) bond -> . semi_bond
    (35) bond -> . -
    (56) empty -> .

    )               reduce using rule 15 (inner_branch -> opt_bond_dot line .)
    .               shift and go to state 30
    semi_bond       shift and go to state 15
    -               shift and go to state 16
    organic_symbol  reduce using rule 56 (empty -> .)
    [               reduce using rule 56 (empty -> .)

    opt_bond_dot                   shift and go to state 28
    inner_branch                   shift and go to state 49
    bond                           shift and go to state 29
    empty                          shift and go to state 31

state 43

    (42) rnum -> % digit digit .

    .               reduce using rule 42 (rnum -> % digit digit .)
    semi_bond       reduce using rule 42 (rnum -> % digit digit .)
    -               reduce using rule 42 (rnum -> % digit digit .)
    organic_symbol  reduce using rule 42 (rnum -> % digit digit .)
    digit           reduce using rule 42 (rnum -> % digit digit .)
    %               reduce using rule 42 (rnum -> % digit digit .)
    [               reduce using rule 42 (rnum -> % digit digit .)
    (               reduce using rule 42 (rnum -> % digit digit .)
    $end            reduce using rule 42 (rnum -> % digit digit .)
    )               reduce using rule 42 (rnum -> % digit digit .)


state 44

    (40) bracket_atom -> [ opt_isotope symbol opt_chiral . opt_hcount opt_charge opt_map ]
    (23) opt_hcount -> . hcount
    (24) opt_hcount -> . empty
    (44) hcount -> . H opt_digit
    (56) empty -> .

    H               shift and go to state 53
    +               reduce using rule 56 (empty -> .)
    -               reduce using rule 56 (empty -> .)
    :               reduce using rule 56 (empty -> .)
    ]               reduce using rule 56 (empty -> .)

    opt_hcount                     shift and go to state 50
    hcount                         shift and go to state 51
    empty                          shift and go to state 52

state 45

    (21) opt_chiral -> chiral .

    H               reduce using rule 21 (opt_chiral -> chiral .)
    +               reduce using rule 21 (opt_chiral -> chiral .)
    -               reduce using rule 21 (opt_chiral -> chiral .)
    :               reduce using rule 21 (opt_chiral -> chiral .)
    ]               reduce using rule 21 (opt_chiral -> chiral .)


state 46

    (22) opt_chiral -> empty .

    H               reduce using rule 22 (opt_chiral -> empty .)
    +               reduce using rule 22 (opt_chiral -> empty .)
    -               reduce using rule 22 (opt_chiral -> empty .)
    :               reduce using rule 22 (opt_chiral -> empty .)
    ]               reduce using rule 22 (opt_chiral -> empty .)


state 47

    (52) chiral -> @ .
    (53) chiral -> @ . @

    H               reduce using rule 52 (chiral -> @ .)
    +               reduce using rule 52 (chiral -> @ .)
    -               reduce using rule 52 (chiral -> @ .)
    :               reduce using rule 52 (chiral -> @ .)
    ]               reduce using rule 52 (chiral -> @ .)
    @               shift and go to state 54


state 48

    (43) isotope -> opt_digit opt_digit digit .

    semi_symbol     reduce using rule 43 (isotope -> opt_digit opt_digit digit .)
    H               reduce using rule 43 (isotope -> opt_digit opt_digit digit .)


state 49

    (16) inner_branch -> opt_bond_dot line inner_branch .

    )               reduce using rule 16 (inner_branch -> opt_bond_dot line inner_branch .)


state 50

    (40) bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount . opt_charge opt_map ]
    (28) opt_charge -> . charge
    (29) opt_charge -> . empty
    (45) charge -> . +
    (46) charge -> . + +
    (47) charge -> . + fifteen
    (48) charge -> . -
    (49) charge -> . - -
    (50) charge -> . - fifteen
    (56) empty -> .

    +               shift and go to state 58
    -               shift and go to state 59
    :               reduce using rule 56 (empty -> .)
    ]               reduce using rule 56 (empty -> .)

    opt_charge                     shift and go to state 55
    charge                         shift and go to state 56
    empty                          shift and go to state 57

state 51

    (23) opt_hcount -> hcount .

    +               reduce using rule 23 (opt_hcount -> hcount .)
    -               reduce using rule 23 (opt_hcount -> hcount .)
    :               reduce using rule 23 (opt_hcount -> hcount .)
    ]               reduce using rule 23 (opt_hcount -> hcount .)


state 52

    (24) opt_hcount -> empty .

    +               reduce using rule 24 (opt_hcount -> empty .)
    -               reduce using rule 24 (opt_hcount -> empty .)
    :               reduce using rule 24 (opt_hcount -> empty .)
    ]               reduce using rule 24 (opt_hcount -> empty .)


state 53

    (44) hcount -> H . opt_digit
    (32) opt_digit -> . digit
    (33) opt_digit -> . empty
    (56) empty -> .

    digit           shift and go to state 23
    +               reduce using rule 56 (empty -> .)
    -               reduce using rule 56 (empty -> .)
    :               reduce using rule 56 (empty -> .)
    ]               reduce using rule 56 (empty -> .)

    opt_digit                      shift and go to state 60
    empty                          shift and go to state 40

state 54

    (53) chiral -> @ @ .

    H               reduce using rule 53 (chiral -> @ @ .)
    +               reduce using rule 53 (chiral -> @ @ .)
    -               reduce using rule 53 (chiral -> @ @ .)
    :               reduce using rule 53 (chiral -> @ @ .)
    ]               reduce using rule 53 (chiral -> @ @ .)


state 55

    (40) bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge . opt_map ]
    (30) opt_map -> . map
    (31) opt_map -> . empty
    (51) map -> . : opt_digit opt_digit digit
    (56) empty -> .

    :               shift and go to state 64
    ]               reduce using rule 56 (empty -> .)

    opt_map                        shift and go to state 61
    map                            shift and go to state 62
    empty                          shift and go to state 63

state 56

    (28) opt_charge -> charge .

    :               reduce using rule 28 (opt_charge -> charge .)
    ]               reduce using rule 28 (opt_charge -> charge .)


state 57

    (29) opt_charge -> empty .

    :               reduce using rule 29 (opt_charge -> empty .)
    ]               reduce using rule 29 (opt_charge -> empty .)


state 58

    (45) charge -> + .
    (46) charge -> + . +
    (47) charge -> + . fifteen
    (54) fifteen -> . digit
    (55) fifteen -> . digit digit

    :               reduce using rule 45 (charge -> + .)
    ]               reduce using rule 45 (charge -> + .)
    +               shift and go to state 65
    digit           shift and go to state 67

    fifteen                        shift and go to state 66

state 59

    (48) charge -> - .
    (49) charge -> - . -
    (50) charge -> - . fifteen
    (54) fifteen -> . digit
    (55) fifteen -> . digit digit

    :               reduce using rule 48 (charge -> - .)
    ]               reduce using rule 48 (charge -> - .)
    -               shift and go to state 68
    digit           shift and go to state 67

    fifteen                        shift and go to state 69

state 60

    (44) hcount -> H opt_digit .

    +               reduce using rule 44 (hcount -> H opt_digit .)
    -               reduce using rule 44 (hcount -> H opt_digit .)
    :               reduce using rule 44 (hcount -> H opt_digit .)
    ]               reduce using rule 44 (hcount -> H opt_digit .)


state 61

    (40) bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map . ]

    ]               shift and go to state 70


state 62

    (30) opt_map -> map .

    ]               reduce using rule 30 (opt_map -> map .)


state 63

    (31) opt_map -> empty .

    ]               reduce using rule 31 (opt_map -> empty .)


state 64

    (51) map -> : . opt_digit opt_digit digit
    (32) opt_digit -> . digit
    (33) opt_digit -> . empty
    (56) empty -> .

  ! shift/reduce conflict for digit resolved as shift
    digit           shift and go to state 23

  ! digit           [ reduce using rule 56 (empty -> .) ]

    opt_digit                      shift and go to state 71
    empty                          shift and go to state 40

state 65

    (46) charge -> + + .

    :               reduce using rule 46 (charge -> + + .)
    ]               reduce using rule 46 (charge -> + + .)


state 66

    (47) charge -> + fifteen .

    :               reduce using rule 47 (charge -> + fifteen .)
    ]               reduce using rule 47 (charge -> + fifteen .)


state 67

    (54) fifteen -> digit .
    (55) fifteen -> digit . digit

    :               reduce using rule 54 (fifteen -> digit .)
    ]               reduce using rule 54 (fifteen -> digit .)
    digit           shift and go to state 72


state 68

    (49) charge -> - - .

    :               reduce using rule 49 (charge -> - - .)
    ]               reduce using rule 49 (charge -> - - .)


state 69

    (50) charge -> - fifteen .

    :               reduce using rule 50 (charge -> - fifteen .)
    ]               reduce using rule 50 (charge -> - fifteen .)


state 70

    (40) bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .

    (               reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    .               reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    semi_bond       reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    -               reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    organic_symbol  reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    digit           reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    %               reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    [               reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    $end            reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)
    )               reduce using rule 40 (bracket_atom -> [ opt_isotope symbol opt_chiral opt_hcount opt_charge opt_map ] .)


state 71

    (51) map -> : opt_digit . opt_digit digit
    (32) opt_digit -> . digit
    (33) opt_digit -> . empty
    (56) empty -> .

  ! shift/reduce conflict for digit resolved as shift
    digit           shift and go to state 23

  ! digit           [ reduce using rule 56 (empty -> .) ]

    opt_digit                      shift and go to state 73
    empty                          shift and go to state 40

state 72

    (55) fifteen -> digit digit .

    :               reduce using rule 55 (fifteen -> digit digit .)
    ]               reduce using rule 55 (fifteen -> digit digit .)


state 73

    (51) map -> : opt_digit opt_digit . digit

    digit           shift and go to state 74


state 74

    (51) map -> : opt_digit opt_digit digit .

    ]               reduce using rule 51 (map -> : opt_digit opt_digit digit .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for . in state 2 resolved as shift
WARNING: shift/reduce conflict for semi_bond in state 2 resolved as shift
WARNING: shift/reduce conflict for - in state 2 resolved as shift
WARNING: shift/reduce conflict for organic_symbol in state 2 resolved as shift
WARNING: shift/reduce conflict for [ in state 2 resolved as shift
WARNING: shift/reduce conflict for digit in state 5 resolved as shift
WARNING: shift/reduce conflict for . in state 8 resolved as shift
WARNING: shift/reduce conflict for semi_bond in state 8 resolved as shift
WARNING: shift/reduce conflict for - in state 8 resolved as shift
WARNING: shift/reduce conflict for organic_symbol in state 8 resolved as shift
WARNING: shift/reduce conflict for [ in state 8 resolved as shift
WARNING: shift/reduce conflict for . in state 9 resolved as shift
WARNING: shift/reduce conflict for semi_bond in state 9 resolved as shift
WARNING: shift/reduce conflict for - in state 9 resolved as shift
WARNING: shift/reduce conflict for organic_symbol in state 9 resolved as shift
WARNING: shift/reduce conflict for [ in state 9 resolved as shift
WARNING: shift/reduce conflict for . in state 10 resolved as shift
WARNING: shift/reduce conflict for semi_bond in state 10 resolved as shift
WARNING: shift/reduce conflict for - in state 10 resolved as shift
WARNING: shift/reduce conflict for organic_symbol in state 10 resolved as shift
WARNING: shift/reduce conflict for digit in state 10 resolved as shift
WARNING: shift/reduce conflict for % in state 10 resolved as shift
WARNING: shift/reduce conflict for [ in state 10 resolved as shift
WARNING: shift/reduce conflict for digit in state 22 resolved as shift
WARNING: shift/reduce conflict for digit in state 64 resolved as shift
WARNING: shift/reduce conflict for digit in state 71 resolved as shift
